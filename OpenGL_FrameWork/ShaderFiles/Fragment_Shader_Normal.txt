#version 330 core
out vec4 FragColor;
 
in vec3 FragPos;
in vec3 OutNormal;
in vec3 OutColor;

uniform	vec3	vLightPos;
uniform	vec3	vLightColor;


void main() 
{
	float	vAmbientLight =0.1;
	vec3	vAmbient = vAmbientLight * vLightColor;

	vec3	vNormal = OutNormal;
	vec3	vLightDir = normalize(vLightPos - FragPos);
	float	fDiffuseLight = max(dot(vNormal, vLightDir), 0.0);

	vec3	fDiffuse = fDiffuseLight * vLightColor;
	vec3	vResult	= (vAmbient + fDiffuse)*OutColor;
    FragColor=vec4(vResult,1.f);
}